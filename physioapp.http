
# Uma variável para nossa URL base para manter as coisas organizadas
@baseUrl = http://localhost:8080

###
### SEÇÃO 1: CRIAÇÃO DE USUÁRIOS
###

### 1. Criar um Paciente (João Silva)
# Damos um nome a esta requisição para capturar seu ID de resposta para uso posterior.
# @name createPatient
POST {{baseUrl}}/users
Content-Type: application/json

{
  "user_type": "PATIENT",
  "username": "joao.silva.paciente",
  "fullname": "João Silva",
  "email": "joao.silva.paciente@exemplo.com",
  "phone": "555-1234",
  "password": "senha123",
  "role": "PATIENT"
}

# Capturar o ID do paciente criado em uma variável
@patientId = {{createPatient.response.body.$.id}}

### 2. Criar um Fisioterapeuta (Dra. Maria Oliveira)
# @name createPhysio
POST {{baseUrl}}/users
Content-Type: application/json

{
  "user_type": "PHYSIO",
  "username": "maria.oliveira.fisio",
  "fullname": "Dra. Maria Oliveira",
  "email": "maria.oliveira.fisio@exemplo.com",
  "phone": "555-5678",
  "password": "senha456",
  "role": "PHYSIO",
  "crefito": "FISIO-98765"
}

# Capturar o ID do fisioterapeuta criado
@physioId = {{createPhysio.response.body.$.id}}


###
### SEÇÃO 2: VISUALIZAÇÃO E ATUALIZAÇÃO DE USUÁRIOS
###

### 3. Obter Todos os Usuários
# Você deverá ver tanto João Silva quanto Dra. Oliveira na resposta.
GET {{baseUrl}}/users

### 4. Obter um Único Usuário por ID (O Paciente)
# Isso usa o ID que capturamos do primeiro usuário criado.
GET {{baseUrl}}/users/{{patientId}}

### 5. Atualizar o Número de Telefone do Paciente
PUT {{baseUrl}}/users/{{patientId}}
Content-Type: application/json

{
  "user_type": "PATIENT",
  "username": "joao.silva.paciente",
  "fullname": "João 'Joãozinho' Silva",
  "email": "joao.silva.paciente@exemplo.com",
  "phone": "555-4321-ATUALIZADO",
  "password": "novaSenha789",
  "role": "PATIENT"
}

### 6. Verificar a Atualização do Paciente
# Busque o paciente novamente para ver o novo número de telefone e nome completo.
GET {{baseUrl}}/users/{{patientId}}


###
### SEÇÃO 3: GERENCIAMENTO DE AGENDAMENTOS
###

### 7. Agendar uma Consulta para João com a Dra. Oliveira
# @name createAppointment
POST {{baseUrl}}/appointments
Content-Type: application/json

{
    "physiotherapistId": {{physioId}},
    "patientId": {{patientId}},
    "dateTime": "2025-09-20T10:00:00",
    "durationMinutes": 45,
    "notes": "Consulta inicial para dor nas costas."
}

# Capturar o ID do agendamento
@appointmentId = {{createAppointment.response.body.$.id}}

### 8. Obter os Detalhes do Agendamento por ID
GET {{baseUrl}}/appointments/{{appointmentId}}

HTTP/1.1 500 
Content-Type: application/json
Transfer-Encoding: chunked
Date: Tue, 16 Sep 2025 20:37:41 GMT
Connection: close

{
  "timestamp": "2025-09-16T20:37:41.211+00:00",
  "status": 500,
  "error": "Erro Interno do Servidor",
  "path": "/appointments/1"
}

### 9. Obter Todos os Agendamentos do Paciente João Silva
# Isso demonstra a capacidade de filtragem da API.
GET {{baseUrl}}/appointments?patientId={{patientId}}

### 10. Cancelar o Agendamento
# Isso demonstra um endpoint de "ação" que altera o estado.
# @name cancelAppointment
POST {{baseUrl}}/appointments/{{appointmentId}}/cancel

### 11. Verificar se o Agendamento Foi Cancelado
# Busque o agendamento novamente e verifique se seu status agora é "CANCELADO".
GET {{baseUrl}}/appointments/{{appointmentId}}


###
### SEÇÃO 4: GERENCIAMENTO DE NOTIFICAÇÕES
###

### 12. Criar uma Notificação para o Paciente (ex: sobre o cancelamento)
# @name createNotification
POST {{baseUrl}}/notifications
Content-Type: application/json

{
    "recipientId": {{patientId}},
    "title": "Agendamento Cancelado",
    "message": "Seu agendamento em 20/09/2025 foi cancelado com sucesso.",
    "type": "INFO"
}

# Capturar o ID da notificação
@notificationId = {{createNotification.response.body.$.id}}

### 13. Obter Todas as Notificações do Paciente
GET {{baseUrl}}/notifications?userId={{patientId}}

### 14. Obter Apenas Notificações NÃO LIDAS do Paciente
# Demonstra o sinalizador unreadOnly.
GET {{baseUrl}}/notifications?userId={{patientId}}&unreadOnly=true

### 15. Marcar a Notificação como Lida
# @name markAsRead
POST {{baseUrl}}/notifications/{{notificationId}}/read

### 16. Verificar se a Notificação Está Lida
# Agora, quando solicitarmos notificações não lidas, a lista deverá estar vazia.
GET {{baseUrl}}/notifications?userId={{patientId}}&unreadOnly=true


###
### SEÇÃO 5: LIMPEZA
###

### 17. Limpeza: Excluir o Paciente
DELETE {{baseUrl}}/users/{{patientId}}

### 18. Verificar Exclusão do Paciente
# Esta requisição agora deverá falhar com erro 404 Não Encontrado.
GET {{baseUrl}}/users/{{patientId}}

### 19. Obter Todos os Usuários Novamente
# A lista agora deverá conter apenas Dra. Maria Oliveira.
GET {{baseUrl}}/users